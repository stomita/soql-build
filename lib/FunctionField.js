"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _Field2 = _interopRequireDefault(require("./Field"));
var _buildField = _interopRequireDefault(require("./buildField"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var FunctionField = exports["default"] = /*#__PURE__*/function (_Field) {
  _inherits(FunctionField, _Field);
  var _super = _createSuper(FunctionField);
  function FunctionField(config, baseObjectName) {
    var _this;
    _classCallCheck(this, FunctionField);
    _this = _super.call(this);
    _this["function"] = config["function"];
    _this.arguments = (config.arguments || []).map(function (arg) {
      return (0, _buildField["default"])(arg, baseObjectName);
    });
    _this.alias = config.alias;
    return _this;
  }
  _createClass(FunctionField, [{
    key: "toSOQL",
    value: function toSOQL() {
      return this["function"] + "(" + this.arguments.map(function (arg) {
        return arg.toSOQL();
      }).join(", ") + ")";
    }
  }]);
  return FunctionField;
}(_Field2["default"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfRmllbGQyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfYnVpbGRGaWVsZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfdG9Qcm9wZXJ0eUtleSIsImtleSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsImFyZyIsIl90b1ByaW1pdGl2ZSIsIl90eXBlb2YiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiTnVtYmVyIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJ2YWx1ZSIsIl9zZXRQcm90b3R5cGVPZiIsIm8iLCJwIiwic2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiX2NyZWF0ZVN1cGVyIiwiRGVyaXZlZCIsImhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2NyZWF0ZVN1cGVySW50ZXJuYWwiLCJTdXBlciIsIl9nZXRQcm90b3R5cGVPZiIsInJlc3VsdCIsIk5ld1RhcmdldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJSZWZlcmVuY2VFcnJvciIsInNoYW0iLCJQcm94eSIsIkJvb2xlYW4iLCJ2YWx1ZU9mIiwiZSIsImdldFByb3RvdHlwZU9mIiwiRnVuY3Rpb25GaWVsZCIsImV4cG9ydHMiLCJfRmllbGQiLCJfc3VwZXIiLCJjb25maWciLCJiYXNlT2JqZWN0TmFtZSIsIl90aGlzIiwibWFwIiwiYnVpbGRGaWVsZCIsImFsaWFzIiwidG9TT1FMIiwiam9pbiIsIkZpZWxkIl0sInNvdXJjZXMiOlsiLi4vc3JjL0Z1bmN0aW9uRmllbGQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEZWVwUmVhZG9ubHkgfSBmcm9tIFwidHMtZXNzZW50aWFsc1wiO1xuaW1wb3J0IEZpZWxkLCB7IHR5cGUgRnVuY3Rpb25GaWVsZENvbmZpZyB9IGZyb20gXCIuL0ZpZWxkXCI7XG5pbXBvcnQgYnVpbGRGaWVsZCBmcm9tIFwiLi9idWlsZEZpZWxkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZ1bmN0aW9uRmllbGQgZXh0ZW5kcyBGaWVsZCB7XG4gIGZ1bmN0aW9uOiBzdHJpbmc7XG4gIGFyZ3VtZW50czogRmllbGRbXTtcbiAgYWxpYXM6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBjb25maWc6IERlZXBSZWFkb25seTxGdW5jdGlvbkZpZWxkQ29uZmlnPixcbiAgICBiYXNlT2JqZWN0TmFtZTogc3RyaW5nLFxuICApIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuZnVuY3Rpb24gPSBjb25maWcuZnVuY3Rpb247XG4gICAgdGhpcy5hcmd1bWVudHMgPSAoY29uZmlnLmFyZ3VtZW50cyB8fCBbXSkubWFwKChhcmcpID0+XG4gICAgICBidWlsZEZpZWxkKGFyZywgYmFzZU9iamVjdE5hbWUpLFxuICAgICk7XG4gICAgdGhpcy5hbGlhcyA9IGNvbmZpZy5hbGlhcztcbiAgfVxuXG4gIHRvU09RTCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5mdW5jdGlvbiArXG4gICAgICBcIihcIiArXG4gICAgICB0aGlzLmFyZ3VtZW50cy5tYXAoKGFyZykgPT4gYXJnLnRvU09RTCgpKS5qb2luKFwiLCBcIikgK1xuICAgICAgXCIpXCJcbiAgICApO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBc0MsU0FBQUQsdUJBQUFHLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUFBLFNBQUFFLGdCQUFBQyxRQUFBLEVBQUFDLFdBQUEsVUFBQUQsUUFBQSxZQUFBQyxXQUFBLGVBQUFDLFNBQUE7QUFBQSxTQUFBQyxrQkFBQUMsTUFBQSxFQUFBQyxLQUFBLGFBQUFDLENBQUEsTUFBQUEsQ0FBQSxHQUFBRCxLQUFBLENBQUFFLE1BQUEsRUFBQUQsQ0FBQSxVQUFBRSxVQUFBLEdBQUFILEtBQUEsQ0FBQUMsQ0FBQSxHQUFBRSxVQUFBLENBQUFDLFVBQUEsR0FBQUQsVUFBQSxDQUFBQyxVQUFBLFdBQUFELFVBQUEsQ0FBQUUsWUFBQSx3QkFBQUYsVUFBQSxFQUFBQSxVQUFBLENBQUFHLFFBQUEsU0FBQUMsTUFBQSxDQUFBQyxjQUFBLENBQUFULE1BQUEsRUFBQVUsY0FBQSxDQUFBTixVQUFBLENBQUFPLEdBQUEsR0FBQVAsVUFBQTtBQUFBLFNBQUFRLGFBQUFmLFdBQUEsRUFBQWdCLFVBQUEsRUFBQUMsV0FBQSxRQUFBRCxVQUFBLEVBQUFkLGlCQUFBLENBQUFGLFdBQUEsQ0FBQWtCLFNBQUEsRUFBQUYsVUFBQSxPQUFBQyxXQUFBLEVBQUFmLGlCQUFBLENBQUFGLFdBQUEsRUFBQWlCLFdBQUEsR0FBQU4sTUFBQSxDQUFBQyxjQUFBLENBQUFaLFdBQUEsaUJBQUFVLFFBQUEsbUJBQUFWLFdBQUE7QUFBQSxTQUFBYSxlQUFBTSxHQUFBLFFBQUFMLEdBQUEsR0FBQU0sWUFBQSxDQUFBRCxHQUFBLG9CQUFBRSxPQUFBLENBQUFQLEdBQUEsaUJBQUFBLEdBQUEsR0FBQVEsTUFBQSxDQUFBUixHQUFBO0FBQUEsU0FBQU0sYUFBQUcsS0FBQSxFQUFBQyxJQUFBLFFBQUFILE9BQUEsQ0FBQUUsS0FBQSxrQkFBQUEsS0FBQSxrQkFBQUEsS0FBQSxNQUFBRSxJQUFBLEdBQUFGLEtBQUEsQ0FBQUcsTUFBQSxDQUFBQyxXQUFBLE9BQUFGLElBQUEsS0FBQUcsU0FBQSxRQUFBQyxHQUFBLEdBQUFKLElBQUEsQ0FBQUssSUFBQSxDQUFBUCxLQUFBLEVBQUFDLElBQUEsb0JBQUFILE9BQUEsQ0FBQVEsR0FBQSx1QkFBQUEsR0FBQSxZQUFBNUIsU0FBQSw0REFBQXVCLElBQUEsZ0JBQUFGLE1BQUEsR0FBQVMsTUFBQSxFQUFBUixLQUFBO0FBQUEsU0FBQVMsVUFBQUMsUUFBQSxFQUFBQyxVQUFBLGVBQUFBLFVBQUEsbUJBQUFBLFVBQUEsdUJBQUFqQyxTQUFBLDBEQUFBZ0MsUUFBQSxDQUFBZixTQUFBLEdBQUFQLE1BQUEsQ0FBQXdCLE1BQUEsQ0FBQUQsVUFBQSxJQUFBQSxVQUFBLENBQUFoQixTQUFBLElBQUFrQixXQUFBLElBQUFDLEtBQUEsRUFBQUosUUFBQSxFQUFBdkIsUUFBQSxRQUFBRCxZQUFBLGFBQUFFLE1BQUEsQ0FBQUMsY0FBQSxDQUFBcUIsUUFBQSxpQkFBQXZCLFFBQUEsZ0JBQUF3QixVQUFBLEVBQUFJLGVBQUEsQ0FBQUwsUUFBQSxFQUFBQyxVQUFBO0FBQUEsU0FBQUksZ0JBQUFDLENBQUEsRUFBQUMsQ0FBQSxJQUFBRixlQUFBLEdBQUEzQixNQUFBLENBQUE4QixjQUFBLEdBQUE5QixNQUFBLENBQUE4QixjQUFBLENBQUFDLElBQUEsY0FBQUosZ0JBQUFDLENBQUEsRUFBQUMsQ0FBQSxJQUFBRCxDQUFBLENBQUFJLFNBQUEsR0FBQUgsQ0FBQSxTQUFBRCxDQUFBLFlBQUFELGVBQUEsQ0FBQUMsQ0FBQSxFQUFBQyxDQUFBO0FBQUEsU0FBQUksYUFBQUMsT0FBQSxRQUFBQyx5QkFBQSxHQUFBQyx5QkFBQSxvQkFBQUMscUJBQUEsUUFBQUMsS0FBQSxHQUFBQyxlQUFBLENBQUFMLE9BQUEsR0FBQU0sTUFBQSxNQUFBTCx5QkFBQSxRQUFBTSxTQUFBLEdBQUFGLGVBQUEsT0FBQWQsV0FBQSxFQUFBZSxNQUFBLEdBQUFFLE9BQUEsQ0FBQUMsU0FBQSxDQUFBTCxLQUFBLEVBQUFNLFNBQUEsRUFBQUgsU0FBQSxZQUFBRCxNQUFBLEdBQUFGLEtBQUEsQ0FBQU8sS0FBQSxPQUFBRCxTQUFBLFlBQUFFLDBCQUFBLE9BQUFOLE1BQUE7QUFBQSxTQUFBTSwyQkFBQUMsSUFBQSxFQUFBNUIsSUFBQSxRQUFBQSxJQUFBLEtBQUFULE9BQUEsQ0FBQVMsSUFBQSx5QkFBQUEsSUFBQSwyQkFBQUEsSUFBQSxhQUFBQSxJQUFBLHlCQUFBN0IsU0FBQSx1RUFBQTBELHNCQUFBLENBQUFELElBQUE7QUFBQSxTQUFBQyx1QkFBQUQsSUFBQSxRQUFBQSxJQUFBLHlCQUFBRSxjQUFBLHdFQUFBRixJQUFBO0FBQUEsU0FBQVgsMEJBQUEsZUFBQU0sT0FBQSxxQkFBQUEsT0FBQSxDQUFBQyxTQUFBLG9CQUFBRCxPQUFBLENBQUFDLFNBQUEsQ0FBQU8sSUFBQSwyQkFBQUMsS0FBQSxvQ0FBQUMsT0FBQSxDQUFBN0MsU0FBQSxDQUFBOEMsT0FBQSxDQUFBbEMsSUFBQSxDQUFBdUIsT0FBQSxDQUFBQyxTQUFBLENBQUFTLE9BQUEsOENBQUFFLENBQUE7QUFBQSxTQUFBZixnQkFBQVgsQ0FBQSxJQUFBVyxlQUFBLEdBQUF2QyxNQUFBLENBQUE4QixjQUFBLEdBQUE5QixNQUFBLENBQUF1RCxjQUFBLENBQUF4QixJQUFBLGNBQUFRLGdCQUFBWCxDQUFBLFdBQUFBLENBQUEsQ0FBQUksU0FBQSxJQUFBaEMsTUFBQSxDQUFBdUQsY0FBQSxDQUFBM0IsQ0FBQSxhQUFBVyxlQUFBLENBQUFYLENBQUE7QUFBQSxJQUVqQjRCLGFBQWEsR0FBQUMsT0FBQSxxQ0FBQUMsTUFBQTtFQUFBckMsU0FBQSxDQUFBbUMsYUFBQSxFQUFBRSxNQUFBO0VBQUEsSUFBQUMsTUFBQSxHQUFBMUIsWUFBQSxDQUFBdUIsYUFBQTtFQUtoQyxTQUFBQSxjQUNFSSxNQUF5QyxFQUN6Q0MsY0FBc0IsRUFDdEI7SUFBQSxJQUFBQyxLQUFBO0lBQUEzRSxlQUFBLE9BQUFxRSxhQUFBO0lBQ0FNLEtBQUEsR0FBQUgsTUFBQSxDQUFBeEMsSUFBQTtJQUNBMkMsS0FBQSxZQUFhLEdBQUdGLE1BQU0sWUFBUztJQUMvQkUsS0FBQSxDQUFLbEIsU0FBUyxHQUFHLENBQUNnQixNQUFNLENBQUNoQixTQUFTLElBQUksRUFBRSxFQUFFbUIsR0FBRyxDQUFDLFVBQUN2RCxHQUFHO01BQUEsT0FDaEQsSUFBQXdELHNCQUFVLEVBQUN4RCxHQUFHLEVBQUVxRCxjQUFjLENBQUM7SUFBQSxDQUNqQyxDQUFDO0lBQ0RDLEtBQUEsQ0FBS0csS0FBSyxHQUFHTCxNQUFNLENBQUNLLEtBQUs7SUFBQyxPQUFBSCxLQUFBO0VBQzVCO0VBQUMxRCxZQUFBLENBQUFvRCxhQUFBO0lBQUFyRCxHQUFBO0lBQUF1QixLQUFBLEVBRUQsU0FBQXdDLE9BQUEsRUFBUztNQUNQLE9BQ0UsSUFBSSxZQUFTLEdBQ2IsR0FBRyxHQUNILElBQUksQ0FBQ3RCLFNBQVMsQ0FBQ21CLEdBQUcsQ0FBQyxVQUFDdkQsR0FBRztRQUFBLE9BQUtBLEdBQUcsQ0FBQzBELE1BQU0sQ0FBQyxDQUFDO01BQUEsRUFBQyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQ3BELEdBQUc7SUFFUDtFQUFDO0VBQUEsT0FBQVgsYUFBQTtBQUFBLEVBeEJ3Q1ksa0JBQUsifQ==